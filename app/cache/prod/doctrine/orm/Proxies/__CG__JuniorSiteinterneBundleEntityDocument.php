<?php

namespace Proxies\__CG__\Junior\SiteinterneBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Document extends \Junior\SiteinterneBundle\Entity\Document implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'id', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'typeDeDocument', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'extension', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'frozen', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'upUneFois', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'ajoutePar', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'intervenant', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'mission', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'ajouteLe', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'signeLe', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'file');
        }

        return array('__isInitialized__', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'id', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'typeDeDocument', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'extension', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'frozen', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'upUneFois', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'ajoutePar', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'intervenant', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'mission', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'ajouteLe', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'signeLe', '' . "\0" . 'Junior\\SiteinterneBundle\\Entity\\Document' . "\0" . 'file');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Document $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function up()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'up', array());

        return parent::up();
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadDir', array());

        return parent::getUploadDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getDirName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirName', array());

        return parent::getDirName();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function xmlParDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'xmlParDefault', array());

        return parent::xmlParDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeDeDocument($typeDeDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeDeDocument', array($typeDeDocument));

        return parent::setTypeDeDocument($typeDeDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeDeDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeDeDocument', array());

        return parent::getTypeDeDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrozen($frozen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrozen', array($frozen));

        return parent::setFrozen($frozen);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrozen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrozen', array());

        return parent::getFrozen();
    }

    /**
     * {@inheritDoc}
     */
    public function setAjouteLe($ajouteLe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAjouteLe', array($ajouteLe));

        return parent::setAjouteLe($ajouteLe);
    }

    /**
     * {@inheritDoc}
     */
    public function getAjouteLe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAjouteLe', array());

        return parent::getAjouteLe();
    }

    /**
     * {@inheritDoc}
     */
    public function setAjoutePar(\Junior\SiteinterneBundle\Entity\User $ajoutePar = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAjoutePar', array($ajoutePar));

        return parent::setAjoutePar($ajoutePar);
    }

    /**
     * {@inheritDoc}
     */
    public function getAjoutePar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAjoutePar', array());

        return parent::getAjoutePar();
    }

    /**
     * {@inheritDoc}
     */
    public function setMission(\Junior\SiteinterneBundle\Entity\Mission $mission = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMission', array($mission));

        return parent::setMission($mission);
    }

    /**
     * {@inheritDoc}
     */
    public function getMission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMission', array());

        return parent::getMission();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpUneFois($upUneFois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpUneFois', array($upUneFois));

        return parent::setUpUneFois($upUneFois);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpUneFois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpUneFois', array());

        return parent::getUpUneFois();
    }

    /**
     * {@inheritDoc}
     */
    public function setSigneLe($signeLe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSigneLe', array($signeLe));

        return parent::setSigneLe($signeLe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSigneLe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSigneLe', array());

        return parent::getSigneLe();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntervenant(\Junior\SiteinterneBundle\Entity\User $intervenant = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntervenant', array($intervenant));

        return parent::setIntervenant($intervenant);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntervenant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntervenant', array());

        return parent::getIntervenant();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtension($extension)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtension', array($extension));

        return parent::setExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', array());

        return parent::getExtension();
    }

}
